{"path":"/stryker/src/mutators/RemoveConditionalsMutator.js","content":"\"use strict\";\r\nvar esprima_1 = require('esprima');\r\nvar RemoveConditionalsMutator = (function () {\r\n    function RemoveConditionalsMutator() {\r\n        this.name = 'RemoveConditionals';\r\n        this.types = [esprima_1.Syntax.DoWhileStatement, esprima_1.Syntax.IfStatement, esprima_1.Syntax.ForStatement, esprima_1.Syntax.WhileStatement];\r\n    }\r\n    RemoveConditionalsMutator.prototype.applyMutations = function (node, copy) {\r\n        var nodes = [];\r\n        if (this.canMutate(node)) {\r\n            var mutatedFalseNode = copy(node.test);\r\n            this.mutateTestExpression(mutatedFalseNode, false);\r\n            nodes.push(mutatedFalseNode);\r\n            if (node.type === esprima_1.Syntax.IfStatement) {\r\n                var mutatedTrueNode = copy(node.test);\r\n                this.mutateTestExpression(mutatedTrueNode, true);\r\n                nodes.push(mutatedTrueNode);\r\n            }\r\n        }\r\n        return nodes;\r\n    };\r\n    RemoveConditionalsMutator.prototype.mutateTestExpression = function (node, newValue) {\r\n        node.type = esprima_1.Syntax.Literal;\r\n        node.value = newValue;\r\n    };\r\n    RemoveConditionalsMutator.prototype.canMutate = function (node) {\r\n        return !!(node && this.types.indexOf(node.type) >= 0);\r\n    };\r\n    ;\r\n    RemoveConditionalsMutator.prototype.copyNode = function (node) {\r\n        return JSON.parse(JSON.stringify(node));\r\n    };\r\n    return RemoveConditionalsMutator;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = RemoveConditionalsMutator;\r\n//# sourceMappingURL=RemoveConditionalsMutator.js.map"}