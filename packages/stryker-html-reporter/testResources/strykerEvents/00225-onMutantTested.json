{"sourceFilePath":"/stryker/src/TestSelectorOrchestrator.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":7,"column":44},"end":{"line":62,"column":1}},"range":[469,3509],"originalLines":"var TestSelectorOrchestrator = (function () {\r\n    function TestSelectorOrchestrator(options) {\r\n        this.options = options;\r\n    }\r\n    TestSelectorOrchestrator.prototype.determineTestSelector = function () {\r\n        var testSelector = null;\r\n        if (this.options.testSelector && this.options.testSelector !== 'null') {\r\n            testSelector = this.determineTestSelectorBasedOnTestSelectorSetting();\r\n        }\r\n        else if (this.options.testSelector === null || this.options.testSelector === 'null') {\r\n            log.debug('Running without testSelector (testSelector was null).');\r\n        }\r\n        else {\r\n            if (this.options.testFramework) {\r\n                testSelector = this.determineTestSelectorBasedOnTestFrameworkSetting();\r\n            }\r\n            else {\r\n                log.warn(\"Missing config settings `testFramework` or `testSelector`. \" + WARNING_RUNNING_WITHOUT_SELECTOR + \" \" + IGNORE_WARNING);\r\n            }\r\n        }\r\n        return testSelector;\r\n    };\r\n    TestSelectorOrchestrator.prototype.determineTestSelectorBasedOnTestSelectorSetting = function () {\r\n        if (this.testSelectorExists(this.options.testSelector)) {\r\n            log.debug(\"Using testSelector \" + this.options.testSelector + \" based on `testSelector` setting\");\r\n            return this.createTestSelector(this.options.testSelector);\r\n        }\r\n        else {\r\n            log.warn(\"Could not find test selector `\" + this.options.testSelector + \"`. \" + WARNING_RUNNING_WITHOUT_SELECTOR + \" \" + this.informAboutKnownTestSelectors());\r\n            return null;\r\n        }\r\n    };\r\n    TestSelectorOrchestrator.prototype.determineTestSelectorBasedOnTestFrameworkSetting = function () {\r\n        if (this.testSelectorExists(this.options.testFramework)) {\r\n            log.debug(\"Using testSelector \" + this.options.testFramework + \" based on `testFramework` setting\");\r\n            return this.createTestSelector(this.options.testFramework);\r\n        }\r\n        else {\r\n            log.warn(\"Could not find test selector `\" + this.options.testFramework + \"` (based on the configured testFramework). \" + WARNING_RUNNING_WITHOUT_SELECTOR + \" \" + IGNORE_WARNING + \" \" + this.informAboutKnownTestSelectors());\r\n            return null;\r\n        }\r\n    };\r\n    TestSelectorOrchestrator.prototype.informAboutKnownTestSelectors = function () {\r\n        return \"Did you forget to load a plugin? Known test selectors: \" + JSON.stringify(test_selector_1.TestSelectorFactory.instance().knownNames()) + \".\";\r\n    };\r\n    TestSelectorOrchestrator.prototype.createTestSelector = function (name) {\r\n        return test_selector_1.TestSelectorFactory.instance().create(name, this.createSettings());\r\n    };\r\n    TestSelectorOrchestrator.prototype.testSelectorExists = function (maybeSelector) {\r\n        return test_selector_1.TestSelectorFactory.instance().knownNames().indexOf(maybeSelector) > -1;\r\n    };\r\n    TestSelectorOrchestrator.prototype.createSettings = function () {\r\n        return { options: this.options };\r\n    };\r\n    return TestSelectorOrchestrator;\r\n}());","mutatedLines":"var TestSelectorOrchestrator = (function () {\n}());"}