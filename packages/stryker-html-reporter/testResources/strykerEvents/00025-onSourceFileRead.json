{"path":"c:\\z\\github\\stryker-mutator\\stryker\\src\\reporters\\EventReporter.js","content":"\"use strict\";\r\nvar BroadcastReporter_1 = require('./BroadcastReporter');\r\nvar fileUtils = require('../utils/fileUtils');\r\nvar log4js = require('log4js');\r\nvar path = require('path');\r\nvar log = log4js.getLogger('EventReporter');\r\nvar DEFAULT_BASE_FOLDER = 'reports/mutation/events';\r\nvar EventReporter = (function () {\r\n    function EventReporter(options) {\r\n        var _this = this;\r\n        this.options = options;\r\n        this.allWork = [];\r\n        var index = 0;\r\n        this.createBaseFolderTask = fileUtils.cleanFolder(this.baseFolder);\r\n        BroadcastReporter_1.ALL_EVENT_METHOD_NAMES.forEach(function (method) {\r\n            _this[method] = function (data) {\r\n                _this.allWork.push(_this.createBaseFolderTask.then(function () { return _this.writeToFile(index++, method, data); }));\r\n            };\r\n        });\r\n    }\r\n    Object.defineProperty(EventReporter.prototype, \"baseFolder\", {\r\n        get: function () {\r\n            if (!this._baseFolder) {\r\n                if (this.options['eventReporter'] && this.options['eventReporter']['baseDir']) {\r\n                    this._baseFolder = this.options['eventReporter']['baseDir'];\r\n                    log.debug(\"Using configured output folder \" + this._baseFolder);\r\n                }\r\n                else {\r\n                    log.debug(\"No base folder configuration found (using configuration: eventReporter: { baseDir: 'output/folder' }), using default \" + DEFAULT_BASE_FOLDER);\r\n                    this._baseFolder = DEFAULT_BASE_FOLDER;\r\n                }\r\n            }\r\n            return this._baseFolder;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    EventReporter.prototype.writeToFile = function (index, methodName, data) {\r\n        return fileUtils.writeFile(path.join(this.baseFolder, this.format(index) + \"-\" + methodName + \".json\"), JSON.stringify(data));\r\n    };\r\n    EventReporter.prototype.format = function (input) {\r\n        var str = input.toString();\r\n        for (var i = 10000; i > 1; i = i / 10) {\r\n            if (i > input) {\r\n                str = '0' + str;\r\n            }\r\n        }\r\n        return str;\r\n    };\r\n    EventReporter.prototype.wrapUp = function () {\r\n        return Promise.all(this.allWork);\r\n    };\r\n    return EventReporter;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = EventReporter;\r\n//# sourceMappingURL=EventReporter.js.map"}