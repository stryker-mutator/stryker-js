{"path":"c:\\z\\github\\stryker-mutator\\stryker\\src\\mutators\\OperatorMutator.js","content":"\"use strict\";\r\nvar OperatorMutator = (function () {\r\n    /**\r\n     * Represents a base class for all operator based mutations.\r\n     * @param name The name of the mutator.\r\n     * @param types The type of operators which should be mutated.\r\n     * @param operators The object containing a map for targeted operators and their mutated values.\r\n     */\r\n    function OperatorMutator(name, types, operators) {\r\n        this.name = name;\r\n        this.types = types;\r\n        this.operators = operators;\r\n    }\r\n    OperatorMutator.prototype.applyMutations = function (node, copy) {\r\n        var nodes = [];\r\n        if (this.canMutate(node)) {\r\n            var mutatedNode = copy(node);\r\n            mutatedNode.operator = this.getOperator(node.operator);\r\n            nodes.push(mutatedNode);\r\n        }\r\n        return nodes;\r\n    };\r\n    OperatorMutator.prototype.canMutate = function (node) {\r\n        return !!(node && this.types.indexOf(node.type) >= 0 && this.getOperator(node.operator));\r\n    };\r\n    /**\r\n     * Gets the mutated operator based on an unmutated operator.\r\n     * @function\r\n     * @param {String} operator - An umutated operator.\r\n     * @returns {String} The mutated operator.\r\n     */\r\n    OperatorMutator.prototype.getOperator = function (operator) {\r\n        return this.operators[operator];\r\n    };\r\n    return OperatorMutator;\r\n}());\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = OperatorMutator;\r\n//# sourceMappingURL=OperatorMutator.js.map"}