{"sourceFilePath":"/stryker/src/MutantRunResultMatcher.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":11,"column":71},"end":{"line":31,"column":13}},"range":[478,1476],"originalLines":"            _this.runResultsByTestId.forEach(function (testResult, id) {\r\n                var covered = false;\r\n                if (testResult.coverage) {\r\n                    var coveredFile = testResult.coverage[mutant.filename];\r\n                    if (coveredFile) {\r\n                        // Statement map should change between test run results.\r\n                        // We should be able to safely reuse the smallest statement found in first run.\r\n                        if (!smallestStatement) {\r\n                            smallestStatement = _this.findSmallestCoveringStatement(mutant, coveredFile);\r\n                        }\r\n                        covered = coveredFile.s[smallestStatement] > 0;\r\n                    }\r\n                }\r\n                else {\r\n                    // If there is no coverage result we have to assume the source code is covered\r\n                    covered = true;\r\n                }\r\n                if (covered) {\r\n                    mutant.addRunResultForTest(id, testResult);\r\n                }\r\n            });","mutatedLines":"            _this.runResultsByTestId.forEach(function (testResult, id) {\n});"}