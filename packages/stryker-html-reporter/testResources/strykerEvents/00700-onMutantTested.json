{"sourceFilePath":"/stryker/src/MutatorOrchestrator.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":75,"column":41},"end":{"line":97,"column":9}},"range":[3754,5213],"originalLines":"        nodes.forEach(function (astnode) {\r\n            if (astnode.type) {\r\n                Object.freeze(astnode);\r\n                _this.mutators.forEach(function (mutator) {\r\n                    try {\r\n                        var mutatedNodes = mutator.applyMutations(astnode, function (node, deepClone) {\r\n                            return deepClone ? _.cloneDeep(node) : _.clone(node);\r\n                        });\r\n                        if (mutatedNodes.length > 0) {\r\n                            log.debug(\"The mutator '\" + mutator.name + \"' mutated \" + mutatedNodes.length + \" node\" + (mutatedNodes.length > 1 ? 's' : '') + \" between (Ln \" + astnode.loc.start.line + \", Col \" + astnode.loc.start.column + \") and (Ln \" + astnode.loc.end.line + \", Col \" + astnode.loc.end.column + \") in file \" + sourceFile);\r\n                        }\r\n                        mutatedNodes.forEach(function (mutatedNode) {\r\n                            var mutatedCode = parserUtils.generate(mutatedNode);\r\n                            var originalNode = nodes[mutatedNode.nodeID];\r\n                            mutants.push(new Mutant_1.default(mutator.name, sourceFile, originalCode, mutatedCode, originalNode.loc, originalNode.range));\r\n                        });\r\n                    }\r\n                    catch (error) {\r\n                        throw new Error(\"The mutator named '\" + mutator.name + \"' caused an error: \" + error);\r\n                    }\r\n                });\r\n            }\r\n        });","mutatedLines":"        nodes.forEach(function (astnode) {\n});"}