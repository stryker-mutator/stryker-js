{"sourceFilePath":"/stryker/src/ConfigReader.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":29,"column":58},"end":{"line":57,"column":5}},"range":[978,2121],"originalLines":"    ConfigReader.prototype.loadConfigModule = function () {\r\n        var configModule;\r\n        if (this.options.configFile) {\r\n            log.debug('Loading config %s', this.options.configFile);\r\n            try {\r\n                configModule = require(process.cwd() + \"/\" + this.options.configFile);\r\n            }\r\n            catch (e) {\r\n                if (e.code === 'MODULE_NOT_FOUND' && e.message.indexOf(this.options.configFile) !== -1) {\r\n                    log.fatal('File %s does not exist!', this.options.configFile);\r\n                    log.fatal(e);\r\n                }\r\n                else {\r\n                    log.fatal('Invalid config file!\\n  ' + e.stack);\r\n                }\r\n                process.exit(1);\r\n            }\r\n            if (!_.isFunction(configModule)) {\r\n                log.fatal('Config file must export a function!\\n' + exports.CONFIG_SYNTAX_HELP);\r\n                process.exit(1);\r\n            }\r\n        }\r\n        else {\r\n            log.debug('No config file specified.');\r\n            // if no config file path is passed, we define a dummy config module.\r\n            configModule = function () { };\r\n        }\r\n        return configModule;\r\n    };","mutatedLines":"    ConfigReader.prototype.loadConfigModule = function () {\n};"}