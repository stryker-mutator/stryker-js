{"sourceFilePath":"/stryker/src/PluginLoader.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":19,"column":46},"end":{"line":41,"column":13}},"range":[694,2043],"originalLines":"            if (_.isString(pluginExpression)) {\r\n                if (pluginExpression.indexOf('*') !== -1) {\r\n                    var pluginDirectory = path.normalize(__dirname + '/../..');\r\n                    var regexp = new RegExp('^' + pluginExpression.replace('*', '.*'));\r\n                    log.debug('Loading %s from %s', pluginExpression, pluginDirectory);\r\n                    var plugins = fs.readdirSync(pluginDirectory)\r\n                        .filter(function (pluginName) { return IGNORED_PACKAGES.indexOf(pluginName) === -1 && regexp.test(pluginName); })\r\n                        .map(function (pluginName) { return pluginDirectory + '/' + pluginName; });\r\n                    if (plugins.length === 0) {\r\n                        log.debug('Expression %s not resulted in plugins to load', pluginExpression);\r\n                    }\r\n                    plugins\r\n                        .map(function (plugin) { return path.basename(plugin); })\r\n                        .map(function (plugin) {\r\n                        log.debug('Loading plugins %s (matched with expression %s)', plugin, pluginExpression);\r\n                        return plugin;\r\n                    })\r\n                        .forEach(function (p) { return modules.push(p); });\r\n                }\r\n                else {\r\n                    modules.push(pluginExpression);\r\n                }\r\n            }","mutatedLines":"            if (_.isString(pluginExpression)) {\n}"}