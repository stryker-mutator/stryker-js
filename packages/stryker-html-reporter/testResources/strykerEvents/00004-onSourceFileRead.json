{"path":"c:\\z\\github\\stryker-mutator\\stryker\\src\\isolated-runner\\IsolatedTestRunnerAdapterWorker.js","content":"\"use strict\";\r\nvar Message_1 = require('./Message');\r\nvar test_runner_1 = require('stryker-api/test_runner');\r\nvar PluginLoader_1 = require('../PluginLoader');\r\nvar log4js = require('log4js');\r\nvar TestRunnerChildProcessAdapterWorker = (function () {\r\n    function TestRunnerChildProcessAdapterWorker() {\r\n        this.listenToMessages();\r\n    }\r\n    TestRunnerChildProcessAdapterWorker.prototype.listenToMessages = function () {\r\n        var _this = this;\r\n        process.on('message', function (message) {\r\n            switch (message.type) {\r\n                case Message_1.MessageType.Start:\r\n                    _this.start(message.body);\r\n                    break;\r\n                case Message_1.MessageType.Run:\r\n                    _this.run(message.body);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    TestRunnerChildProcessAdapterWorker.prototype.start = function (body) {\r\n        log4js.setGlobalLogLevel(body.runnerOptions.strykerOptions.logLevel);\r\n        this.loadPlugins(body.runnerOptions.strykerOptions.plugins);\r\n        this.underlyingTestRunner = test_runner_1.TestRunnerFactory.instance().create(body.runnerName, body.runnerOptions);\r\n    };\r\n    TestRunnerChildProcessAdapterWorker.prototype.run = function (body) {\r\n        this.underlyingTestRunner.run(body.runOptions).then(this.reportResult, this.reportErrorResult);\r\n    };\r\n    TestRunnerChildProcessAdapterWorker.prototype.loadPlugins = function (plugins) {\r\n        new PluginLoader_1.default(plugins).load();\r\n    };\r\n    TestRunnerChildProcessAdapterWorker.prototype.reportResult = function (result) {\r\n        var message = {\r\n            type: Message_1.MessageType.Result,\r\n            body: { result: result }\r\n        };\r\n        process.send(message);\r\n    };\r\n    TestRunnerChildProcessAdapterWorker.prototype.reportErrorResult = function (error) {\r\n        var message = {\r\n            type: Message_1.MessageType.Result,\r\n            body: {\r\n                result: {\r\n                    testNames: [],\r\n                    result: test_runner_1.TestResult.Error,\r\n                }\r\n            }\r\n        };\r\n        process.send(message);\r\n    };\r\n    return TestRunnerChildProcessAdapterWorker;\r\n}());\r\nnew TestRunnerChildProcessAdapterWorker();\r\n//# sourceMappingURL=IsolatedTestRunnerAdapterWorker.js.map"}