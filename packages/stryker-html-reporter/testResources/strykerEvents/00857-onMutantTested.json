{"sourceFilePath":"/stryker/src/InputFileResolver.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":16,"column":39},"end":{"line":32,"column":13}},"range":[779,1576],"originalLines":"                .then(function (files) {\r\n                var mutateFiles = files[0];\r\n                var allFiles = files[1];\r\n                fileUtils_1.normalize(allFiles);\r\n                fileUtils_1.normalize(mutateFiles);\r\n                mutateFiles.forEach(function (mutateFile) {\r\n                    if (allFiles.indexOf(mutateFile) < 0) {\r\n                        errors.push(\"Could not find mutate file \\\"\" + mutateFile + \"\\\" in list of files.\");\r\n                    }\r\n                });\r\n                if (errors.length > 0) {\r\n                    reject(errors);\r\n                }\r\n                else {\r\n                    resolve(allFiles.map(function (file) { return { path: file, shouldMutate: mutateFiles.some(function (mutateFile) { return mutateFile === file; }) }; }));\r\n                }\r\n            }, function (error) { return reject(error); });","mutatedLines":"                .then(function (files) {\n}, function (error) { return reject(error); });"}