{"sourceFilePath":"/stryker/src/MutantRunResultMatcher.js","mutatorName":"BlockStatement","status":1,"replacement":"{\n}","location":{"start":{"line":7,"column":68},"end":{"line":30,"column":5}},"range":[291,1211],"originalLines":"    MutantRunResultMatcher.prototype.matchWithMutants = function () {\r\n        var _this = this;\r\n        this.mutants.forEach(function (mutant) {\r\n            var smallestStatement;\r\n            _this.runResultsByTestId.forEach(function (testResult, id) {\r\n                var covered = false;\r\n                if (testResult.coverage) {\r\n                    var coveredFile = testResult.coverage[mutant.filename];\r\n                    if (coveredFile) {\r\n                        if (!smallestStatement) {\r\n                            smallestStatement = _this.findSmallestCoveringStatement(mutant, coveredFile);\r\n                        }\r\n                        covered = coveredFile.s[smallestStatement] > 0;\r\n                    }\r\n                }\r\n                else {\r\n                    covered = true;\r\n                }\r\n                if (covered) {\r\n                    mutant.addRunResultForTest(id, testResult);\r\n                }\r\n            });\r\n        });\r\n    };","mutatedLines":"    MutantRunResultMatcher.prototype.matchWithMutants = function () {\n};"}