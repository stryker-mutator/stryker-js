// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`instrumenter integration should be able to instrument a simple ts file 1`] = `
"function stryNS_9fa48() {
  var g = new Function(\\"return this\\")();
  var ns = g.__stryker__ || (g.__stryker__ = {});

  if (ns.activeMutant === undefined && g.process && g.process.env && g.process.env.__STRYKER_ACTIVE_MUTANT__) {
    ns.activeMutant = Number(g.process.env.__STRYKER_ACTIVE_MUTANT__);
  }

  function retrieveNS() {
    return ns;
  }

  stryNS_9fa48 = retrieveNS;
  return retrieveNS();
}

stryNS_9fa48();

function stryCov_9fa48() {
  var ns = stryNS_9fa48();
  var cov = ns.mutantCoverage || (ns.mutantCoverage = {
    static: {},
    perTest: {}
  });

  function cover() {
    var c = cov.static;

    if (ns.currentTestId) {
      c = cov.perTest[ns.currentTestId] = cov.perTest[ns.currentTestId] || {};
    }

    var a = arguments;

    for (var i = 0; i < a.length; i++) {
      c[a[i]] = (c[a[i]] || 0) + 1;
    }
  }

  stryCov_9fa48 = cover;
  cover.apply(null, arguments);
}

function stryMutAct_9fa48(id) {
  var ns = stryNS_9fa48();

  function isActive(id) {
    return ns.activeMutant === id;
  }

  stryMutAct_9fa48 = isActive;
  return isActive(id);
}

const bar: number = stryMutAct_9fa48(0) ? 40 - 2 : (stryCov_9fa48(0), 40 + 2);

class Person {
  #name = stryMutAct_9fa48(1) ? \\"\\" : (stryCov_9fa48(1), 'unknown');

  get name(): string {
    if (stryMutAct_9fa48(2)) {
      {}
    } else {
      stryCov_9fa48(2);
      return this.#name;
    }
  }

  set name(value: string) {
    if (stryMutAct_9fa48(3)) {
      {}
    } else {
      stryCov_9fa48(3);

      if (stryMutAct_9fa48(7) ? value.length >= 2 : stryMutAct_9fa48(6) ? value.length <= 2 : stryMutAct_9fa48(5) ? false : stryMutAct_9fa48(4) ? true : (stryCov_9fa48(4, 5, 6, 7), value.length < 2)) {
        if (stryMutAct_9fa48(8)) {
          {}
        } else {
          stryCov_9fa48(8);
          throw new Error(stryMutAct_9fa48(9) ? \\"\\" : (stryCov_9fa48(9), 'Name should be at least 2 characters long'));
        }
      }

      this.#name = value;
    }
  }

}"
`;
