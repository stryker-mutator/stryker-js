// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`instrumenter integration should be able to instrument a vue sample 1`] = `
"<template>
  <div class=\\"hello\\">
    <h1>{{ msg }}</h1>
    <h2>Essential Links</h2>
    <ul>
      <li>
        <a
          href=\\"https://vuejs.org\\"
          target=\\"_blank\\"
        >
          Core Docs
        </a>
      </li>
      <li>
        <a
          href=\\"https://forum.vuejs.org\\"
          target=\\"_blank\\"
        >
          Forum
        </a>
      </li>
      <li>
        <a
          href=\\"https://chat.vuejs.org\\"
          target=\\"_blank\\"
        >
          Community Chat
        </a>
      </li>
      <li>
        <a
          href=\\"https://twitter.com/vuejs\\"
          target=\\"_blank\\"
        >
          Twitter
        </a>
      </li>
      <br>
      <li>
        <a
          href=\\"http://vuejs-templates.github.io/webpack/\\"
          target=\\"_blank\\"
        >
          Docs for This Template
        </a>
      </li>
    </ul>
    <h2>Ecosystem</h2>
    <ul>
      <li>
        <a
          href=\\"http://router.vuejs.org/\\"
          target=\\"_blank\\"
        >
          vue-router
        </a>
      </li>
      <li>
        <a
          href=\\"http://vuex.vuejs.org/\\"
          target=\\"_blank\\"
        >
          vuex
        </a>
      </li>
      <li>
        <a
          href=\\"http://vue-loader.vuejs.org/\\"
          target=\\"_blank\\"
        >
          vue-loader
        </a>
      </li>
      <li>
        <a
          href=\\"https://github.com/vuejs/awesome-vue\\"
          target=\\"_blank\\"
        >
          awesome-vue
        </a>
      </li>
    </ul>
  </div>
</template>

<script>
var __global_69fa48 = function (g) {
  g.__mutantCoverage__ = g.__mutantCoverage__ || {
    static: {},
    perTest: {}
  };

  g.__coverMutant__ = g.__coverMutant__ || function () {
    var c = g.__mutantCoverage__.static;

    if (g.__currentTestId__) {
      c = g.__mutantCoverage__.perTest[g.__currentTestId__] = g.__mutantCoverage__.perTest[g.__currentTestId__] || {};
    }

    var a = arguments;

    for (var i = 0; i < a.length; i++) {
      c[a[i]] = (c[a[i]] || 0) + 1;
    }
  };

  return g;
}(new Function(\\"return this\\")());

export default __global_69fa48.__activeMutant__ === 1 ? {
  name: \\"\\",

  data() {
    switch (__global_69fa48.__activeMutant__) {
      case 2:
        {}
        break;

      default:
        __global_69fa48.__coverMutant__(2);
        {
          return __global_69fa48.__activeMutant__ === 4 ? {
            msg: \\"\\"
          } : __global_69fa48.__activeMutant__ === 3 ? {} : (__global_69fa48.__coverMutant__(3, 4), {
            msg: 'Welcome to Your Vue.js App'
          });
        }
        break;
    }
  }

} : __global_69fa48.__activeMutant__ === 0 ? {} : (__global_69fa48.__coverMutant__(0, 1), {
  name: 'HelloWorld',

  data() {
    switch (__global_69fa48.__activeMutant__) {
      case 2:
        {}
        break;

      default:
        __global_69fa48.__coverMutant__(2);
        {
          return __global_69fa48.__activeMutant__ === 4 ? {
            msg: \\"\\"
          } : __global_69fa48.__activeMutant__ === 3 ? {} : (__global_69fa48.__coverMutant__(3, 4), {
            msg: 'Welcome to Your Vue.js App'
          });
        }
        break;
    }
  }

});
</script>
<script>
var __global_69fa48 = function (g) {
  g.__mutantCoverage__ = g.__mutantCoverage__ || {
    static: {},
    perTest: {}
  };

  g.__coverMutant__ = g.__coverMutant__ || function () {
    var c = g.__mutantCoverage__.static;

    if (g.__currentTestId__) {
      c = g.__mutantCoverage__.perTest[g.__currentTestId__] = g.__mutantCoverage__.perTest[g.__currentTestId__] || {};
    }

    var a = arguments;

    for (var i = 0; i < a.length; i++) {
      c[a[i]] = (c[a[i]] || 0) + 1;
    }
  };

  return g;
}(new Function(\\"return this\\")());

const b = __global_69fa48.__activeMutant__ === 5 ? a - c : (__global_69fa48.__coverMutant__(5), a + c);
</script>

<!-- Add \\"scoped\\" attribute to limit CSS to this component only -->
<style scoped>
h1, h2 {
  font-weight: normal;
}
ul {
  list-style-type: none;
  padding: 0;
}
li {
  display: inline-block;
  margin: 0 10px;
}
a {
  color: #42b983;
}
</style>
"
`;
