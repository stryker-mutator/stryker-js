/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * JSON schema for the Stryker Mutator configuration file
 */
export type StrykerOptions = AllowConsoleColorsDefinition &
  CoverageAnalysisDefinition &
  FileLogLevelDefinition &
  FilesDefinition &
  LogLevelDefinition &
  MaxConcurrentTestRunnersDescription &
  MutateDescription &
  MutatorDescription &
  PluginsDescription &
  ReportersDescription &
  SymlinkNodeModulesDescription &
  TestFrameworkDescription &
  TestRunnerDescription &
  ThresholdsDescription &
  TimeoutFactorDescription &
  TimeoutMSDescription &
  TranspilersDescription;

export interface AllowConsoleColorsDefinition {
  /**
   * The 'allowConsoleColors' value indicates whether Stryker should use colors in console.
   */
  allowConsoleColors?: true | false;
}
export interface CoverageAnalysisDefinition {
  /**
   * With 'coverageAnalysis' you specify which coverage analysis strategy you want to use.
   */
  coverageAnalysis?: 'off' | 'all' | 'perTest';
}
export interface FileLogLevelDefinition {
  /**
   * Set the log level that Stryker uses to write to the "stryker.log" file
   */
  fileLogLevel?: 'off' | 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';
}
export interface FilesDefinition {
  /**
   * With 'files', you can choose which files should be included in your test runner sandbox. This is normally not needed as it defaults to all files not ignored by git. Try it out yourself with this command: 'git ls-files --others --exclude-standard --cached --exclude .stryker-tmp.'
   */
  files?: string[];
}
export interface LogLevelDefinition {
  /**
   * Set the log level that Stryker uses to write to the console.
   */
  logLevel?: 'off' | 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';
}
export interface MaxConcurrentTestRunnersDescription {
  /**
   * Specifies the maximum number of concurrent test runners to spawn. Mutation testing is time consuming. By default, Stryker tries to make the most of your CPU, by spawning as many test runners as you have CPU cores.
   */
  maxConcurrentTestRunners?: number;
}
export interface MutateDescription {
  /**
   * With mutate you configure the subset of files to use for mutation testing. Generally speaking, these should be your own source files.
   */
  mutate?: string[];
}
export interface MutatorDescription {
  /**
   * With mutator you configure which mutator plugin you want to use, and optionally, which mutation types to exclude from the test run.
   */
  mutator?:
    | ('javascript' | 'typescript' | 'vue')
    | {
        name?: string;
        plugins?: string[];
        excludedMutations?: string[];
      };
}
export interface PluginsDescription {
  /**
   * With 'plugins', you can add additional Node modules for Stryker to load (or require). By default, all node_modules starting with @stryker-mutator/* will be loaded, so you would normally not need to specify this option. These modules should be installed right next to stryker. For a current list of plugins, you can consult 'npm' or 'stryker-mutator.io.'
   */
  plugins?: string[];
}
export interface ReportersDescription {
  /**
   * With reporters, you can set the reporters for stryker to use.
   */
  reporters?: string[];
}
export interface SymlinkNodeModulesDescription {
  /**
   * The 'symlinkNodeModules' value indicates whether Stryker should create a symbolic link to your current node_modules directory in the sandbox directories. This makes running your tests by Stryker behave more like your would run the tests yourself in your project directory. Only disable this setting if you really know what you are doing.
   */
  symlinkNodeModules?: true | false;
}
export interface TestFrameworkDescription {
  /**
   * Configure which test framework you are using. This option is not mandatory, as Stryker is test framework agnostic (it doesn't care what framework you use), However, it is required when coverageAnalysis is set to 'perTest', because Stryker needs to hook into the test framework in order to measure code coverage results per test and filter tests to run.
   */
  testFramework?: string;
}
export interface TestRunnerDescription {
  /**
   * With 'testRunner' you specify the test runner that Stryker uses to run your tests. The default value is command. The command runner runs a configurable bash/cmd command and bases the result on the exit code of that program (0 for success, otherwise failed). You can configure this command via the config file using the 'commandRunner: { command: 'npm run mocha' }'. It uses 'npm test' as the command by default.
   */
  testRunner?: string;
}
export interface ThresholdsDescription {
  /**
   * Specify the thresholds for mutation score.
   */
  thresholds?: {
    high?: number;
    low?: number;
    break?: number | null;
    [k: string]: any;
  };
}
export interface TimeoutFactorDescription {
  /**
   * When Stryker is mutating code, it cannot determine indefinitely whether a code mutation results in an infinite loop (see Halting problem). In order to battle infinite loops, a test run gets killed after a certain period of time. This period is configurable with two settings: 'timeoutMS' and 'timeoutFactor'.
   */
  timeoutFactor?: number;
}
export interface TimeoutMSDescription {
  /**
   * When Stryker is mutating code, it cannot determine indefinitely whether a code mutation results in an infinite loop (see Halting problem). In order to battle infinite loops, a test run gets killed after a certain period of time. This period is configurable with two settings: 'timeoutMS' and 'timeoutFactor'.
   */
  timeoutMS?: number;
}
export interface TranspilersDescription {
  /**
   * With 'transpilers' you configure which transpiler plugins should transpile the code before it's executed. This is an array where the transpilers are called in the other of the array. This defaults to an empty array meaning no transpilation will be done.
   */
  transpilers?: string[];
}
